// tags
// DSU 



#include<bits/stdc++.h>
#define long long ll


using namespace std;

int parent[1010];
int psize[1010];
set<int> sat;

int find_val(int v){
if(v==parent[v]) return v;
return parent[v]=find_val(parent[v]);
}

void make_dsu(int v){
parent[v]=v;
sat.insert(v);

}

void make_union(int a,int b){
 a=find_val(a);
 b=find_val(b);

 if(a!=b){
    parent[b]=a;
    sat.erase(b);
 }


}







int main(){
int n;
cin>>n;

for(int i=1;i<=n;i++){
    make_dsu(i);
}


vector<pair<int,int>> q;
for(int i=0;i<n-1;i++){
    int a, b;
    cin>>a>>b;
    q.push_back({a,b});
}
int cnt=0;
int ans[1010][4];
for(auto a:q){
    if(find_val(a.first)!=find_val(a.second)){
        make_union(a.second,a.first);
    }
     else{
        ans[cnt][0]=a.first;
        ans[cnt][1]=a.second;
        cnt+=1;

     }

}
int i=0;
while(sat.size()!=1){
    set<int>::iterator it=sat.begin();
    int a=*it;
    ++it;
    int b=*it;
    make_union(a,b);
    if(sat.find(a)!=sat.end()){
        ans[i][2]=b;
        ans[i][3]=a;
    }else{
        ans[i][2]=a;
        ans[i][3]=b;
    }
    i++;
}
cout<<cnt<<endl;
for(int i=0;i<cnt;i++){
    cout<<ans[i][0]<<" "<<ans[i][1]<<" "<<ans[i][2]<<" "<<ans[i][3]<<endl;
}






return 0;
}



